import math


vertices = (
	(1442908, 160241540), (1442907, 160240868),
	(1442907, 160240868), (1442908, 160240196),
	(1442908, 160240196), (1442910, 160239108),
	(1442910, 160239108), (1442912, 160238372),
	(1442912, 160238372), (1442914, 160237796),
	(1442914, 160237796), (1442921, 160235300),
	(1442921, 160235300), (1442924, 160234116),
	(1442924, 160234116), (1442927, 160232900),
	(1442927, 160232900), (1442930, 160231684),
	(1442930, 160231684), (1442938, 160230436),
	(1442938, 160230436), (1442940, 160229028),
	(1442940, 160229028), (1442944, 160227748),
	(1442944, 160227748), (1442948, 160226404),
	(1442948, 160226404), (1442954, 160223428),
	(1442954, 160223428), (1442962, 160221828),
	(1442962, 160221828), (1442979, 160220900),
	(1442979, 160220900), (1443019, 160218276),
	(1443019, 160218276), (1443022, 160217988),
	(1443022, 160217988), (1443023, 160217669)
)
	

def main():
	lon,lat = a2gps(vertices[0])
	x,y = latlon2xy((lat,lon), 10)
	print '(%f, %f) > %s' % (lat, lon, latlon2xy((lat,lon), 10))
	print '(%d, %d) > %s' % (x,y, xy2latlon((x,y), 10))
	


def a2gps(apos):
	return (apos[0]/1e5, apos[1]/1e5/32.0)


def latlon2xy(gpos, zoom):
	lat,lon = gpos
	n = 2**zoom*256.0
	lat_rad = math.radians(lat)
	x = int((lon+180.0)/360.0 * n)
	y = int((1.0 - math.log(math.tan(lat_rad)+(1/math.cos(lat_rad)))
		/ math.pi) / 2.0*n)
	return (x, y)

def xy2latlon(xy, zoom):
	x,y = xy
	n = 2.0**zoom*256
	lon_deg = x/n*360.0 - 180.0
	lat_rad = math.atan(math.sinh(math.pi * (1 - 2*y/n)))
	lat_deg = math.degrees(lat_rad)
	return (lat_deg, lon_deg)


if __name__ == '__main__':
	main()

